!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
Abs	DrawIt.vim	/^func! <SID>Abs(val)$/;"	f
AddDictFiles	vfunc.vim	/^function! AddDictFiles()$/;"	f
AddToBufferList	vaucmd.vim	/^function! AddToBufferList()$/;"	f
AddToDictionary	spellcheck.vim	/^function AddToDictionary()$/;"	f
AllEnter	vfunc.vim	/^function! AllEnter()$/;"	f
AmpBrowserExit	vafnc.vim	/^function! AmpBrowserExit()$/;"	f
AmpExit	vafnc.vim	/^function! AmpExit()$/;"	f
AmpHelpExit	vafnc.vim	/^function! AmpHelpExit()$/;"	f
AmpPrgExit	vafnc.vim	/^function! AmpPrgExit()$/;"	f
AmpSetStl	vafnc.vim	/^function! AmpSetStl()$/;"	f
Arrow	DrawIt.vim	/^func! <SID>Arrow(x0, y0, x1, y1)$/;"	f
ArticleAbbr	vfunc.vim	/^function! ArticleAbbr()$/;"	f
ArticleEnter	vfunc.vim	/^function! ArticleEnter()$/;"	f
AsmColor	ide.vim	/^function! AsmColor(flag)$/;"	f
AsmFilter	ide.vim	/^function! AsmFilter()$/;"	f
AsmRefresh	vfunc.vim	/^function!  AsmRefresh() $/;"	f
AsmShow	ide.vim	/^function! AsmShow(var)$/;"	f
BackUpWord	vfunc.vim	/^function! BackUpWord()$/;"	f
BashSkipMetaChar	vfunc.vim	/^function! BashSkipMetaChar()$/;"	f
BashSkipWord	vfunc.vim	/^function! BashSkipWord()$/;"	f
Box	DrawIt.vim	/^func! <SID>Box(x0, y0, x1, y1)$/;"	f
BrowserActionC	vbfnc.vim	/^function! BrowserActionC()$/;"	f
BrowserActionCAmEdit	vafnc.vim	/^function! BrowserActionCAmEdit()$/;"	f
BrowserActionCAmp	vafnc.vim	/^function! BrowserActionCAmp()$/;"	f
BrowserDelete	vbfnc.vim	/^function! BrowserDelete()$/;"	f
BrowserEnter	vbfnc.vim	/^function! BrowserEnter()$/;"	f
BrowserEnterC	vbfnc.vim	/^function! BrowserEnterC()$/;"	f
BrowserEnterCAmEdit	vafnc.vim	/^function! BrowserEnterCAmEdit()$/;"	f
BrowserEnterCAmp	vafnc.vim	/^function! BrowserEnterCAmp()$/;"	f
BrowserHelpToggle	vbfnc.vim	/^function! BrowserHelpToggle()$/;"	f
BrowserLeave	vbfnc.vim	/^function! BrowserLeave()$/;"	f
BrowserLeaveC	vbfnc.vim	/^function! BrowserLeaveC()$/;"	f
BrowserLeaveCAmEdit	vafnc.vim	/^function! BrowserLeaveCAmEdit()$/;"	f
BrowserLeaveCAmp	vafnc.vim	/^function! BrowserLeaveCAmp()$/;"	f
BrowserLeaveLock	vbfnc.vim	/^function! BrowserLeaveLock()$/;"	f
BrowserRun	vaucmd.vim	/^function! BrowserRun(arg)$/;"	f
BrowserSyntax	vbfnc.vim	/^function! BrowserSyntax()$/;"	f
BrowserSyntaxAmp	vafnc.vim	/^function! BrowserSyntaxAmp()$/;"	f
BrowserSyntaxCAmEdit	vafnc.vim	/^function! BrowserSyntaxCAmEdit()$/;"	f
BrowserUnMap	vbfnc.vim	/^function! BrowserUnMap()$/;"	f
BufNameNoCwd	vfunc.vim	/^function! BufNameNoCwd()$/;"	f
BufferFunc	vfunc.vim	/^function! BufferFunc(count, line, end)$/;"	f
CLF	vafnc.vim	/^function! CLF()$/;"	f
CSong	vafnc.vim	/^function! CSong(flag)$/;"	f
CVSAdd	cvscommand.vim	/^function! s:CVSAdd()$/;"	f
CVSAnnotate	cvscommand.vim	/^function! s:CVSAnnotate(...)$/;"	f
CVSBufferCheck	cvscommand.vim	/^function! s:CVSBufferCheck(cvsBuffer)$/;"	f
CVSChangeToCurrentFileDir	cvscommand.vim	/^function! s:CVSChangeToCurrentFileDir(fileName)$/;"	f
CVSCommand	cvscommand.vim	/^augroup CVSCommand$/;"	a
CVSCommandPlugin	cvscommand.vim	/^  augroup CVSCommandPlugin$/;"	a
CVSCommandTagPattern	cvscommand.vim	/^let s:CVSCommandTagPattern='\\a[A-Za-z0-9-_]*'$/;"	v
CVSCommit	cvscommand.vim	/^  augroup CVSCommit$/;"	a
CVSCommit	cvscommand.vim	/^function! s:CVSCommit()$/;"	f
CVSCreateCommandBuffer	cvscommand.vim	/^function! s:CVSCreateCommandBuffer(cmd, cmdName, statusText, origBuffNR)$/;"	f
CVSCurrentBufferCheck	cvscommand.vim	/^function! s:CVSCurrentBufferCheck()$/;"	f
CVSDiff	cvscommand.vim	/^function! s:CVSDiff(...)$/;"	f
CVSDisableBufferSetup	cvscommand.vim	/^function! CVSDisableBufferSetup()$/;"	f
CVSDoCommand	cvscommand.vim	/^function! s:CVSDoCommand(cmd, cmdName, statusText)$/;"	f
CVSEdit	cvscommand.vim	/^function! s:CVSEdit()$/;"	f
CVSEditFile	cvscommand.vim	/^function! s:CVSEditFile(name, origBuffNR)$/;"	f
CVSEditors	cvscommand.vim	/^function! s:CVSEditors()$/;"	f
CVSEnableBufferSetup	cvscommand.vim	/^function! CVSEnableBufferSetup()$/;"	f
CVSFinishCommit	cvscommand.vim	/^function! s:CVSFinishCommit(messageFile, targetDir, targetFile, origBuffNR)$/;"	f
CVSGetOption	cvscommand.vim	/^function! s:CVSGetOption(name, default)$/;"	f
CVSGetRevision	cvscommand.vim	/^function! CVSGetRevision()$/;"	f
CVSGetStatusLine	cvscommand.vim	/^function! CVSGetStatusLine()$/;"	f
CVSGetStatusVars	cvscommand.vim	/^function! s:CVSGetStatusVars(revisionVar, branchVar)$/;"	f
CVSLog	cvscommand.vim	/^function! s:CVSLog(...)$/;"	f
CVSMarkOrigBufferForSetup	cvscommand.vim	/^function! s:CVSMarkOrigBufferForSetup(cvsBuffer)$/;"	f
CVSResolveLink	cvscommand.vim	/^function! s:CVSResolveLink(fileName)$/;"	f
CVSRevert	cvscommand.vim	/^function! s:CVSRevert()$/;"	f
CVSReview	cvscommand.vim	/^function! s:CVSReview(...)$/;"	f
CVSSetupBuffer	cvscommand.vim	/^function! s:CVSSetupBuffer()$/;"	f
CVSStatus	cvscommand.vim	/^function! s:CVSStatus()$/;"	f
CVSToggleDeleteOnHide	cvscommand.vim	/^function! s:CVSToggleDeleteOnHide()$/;"	f
CVSUnedit	cvscommand.vim	/^function! s:CVSUnedit()$/;"	f
CVSUpdate	cvscommand.vim	/^function! s:CVSUpdate()$/;"	f
CVSVimDiff	cvscommand.vim	/^function! s:CVSVimDiff(...)$/;"	f
CVSVimDiffRestore	cvscommand.vim	/^augroup CVSVimDiffRestore$/;"	a
CVSVimDiffRestore	cvscommand.vim	/^function! s:CVSVimDiffRestore(vimDiffBuff)$/;"	f
CVSWatch	cvscommand.vim	/^function! s:CVSWatch(onoff)$/;"	f
CVSWatchers	cvscommand.vim	/^function! s:CVSWatchers()$/;"	f
CVSdiff	vfunc.vim	/^function! CVSdiff(cvsversion)$/;"	f
Call_corner	DrawIt.vim	/^func! <SID>Call_corner(func_name)$/;"	f
CdvHidden	vfunc.vim	/^function! CdvHidden()$/;"	f
ChangeCd	vfunc.vim	/^function! ChangeCd(...)$/;"	f
ChangeDir	vbfnc.vim	/^function! ChangeDir(val)$/;"	f
ChangeDirLine	vbfnc.vim	/^function! ChangeDirLine()$/;"	f
ChangeFiles	vfunc.vim	/^function! ChangeFiles(flag)$/;"	f
ChangeScd	vfunc.vim	/^function! ChangeScd(...)$/;"	f
ChangeVolume	vafnc.vim	/^function! ChangeVolume(flag)$/;"	f
CheckAndStartPlayer	vafnc.vim	/^function! CheckAndStartPlayer()$/;"	f
CheckFastChange	vafnc.vim	/^function! CheckFastChange()$/;"	f
CheckForServer	ide.vim	/^function! CheckForServer()$/;"	f
CheckMailBox	vfunc.vim	/^function! CheckMailBox()$/;"	f
CheckNewMail	vfunc.vim	/^function! CheckNewMail(file)$/;"	f
ChtmlEnter	vimrc.vim	/^function! ChtmlEnter()$/;"	f
ClearMetaCharWord	vfunc.vim	/^function! ClearMetaCharWord(string, pos)$/;"	f
ClearNewline	vaucmd.vim	/^function! ClearNewline(s)$/;"	f
ClearNonImportant	vfunc.vim	/^function! ClearNonImportant()$/;"	f
ClearVar	ide.vim	/^function! ClearVar(var, val)$/;"	f
Clearstack	closetag.vim	/^function! Clearstack(sname)$/;"	f
CmdMap	vfunc.vim	/^function! CmdMap()$/;"	f
CmdWinEnter	vfunc.vim	/^function! CmdWinEnter()$/;"	f
CmdlineCompl	cmdline-complete.vim	/^function! CmdlineCompl(flag)$/;"	f
Cmdline_loaded	cmdline-complete.vim	/^let g:Cmdline_loaded = 1$/;"	v
ColorCurrentBrows	ide.vim	/^function! ColorCurrentBrows()$/;"	f
ColorCurrentBrows	vbfnc.vim	/^function! ColorCurrentBrows()$/;"	f
ColorCurrentList	vbfnc.vim	/^function! ColorCurrentList()$/;"	f
ColorFileInList	vfunc.vim	/^function! ColorFileInList()$/;"	f
ColorMoveMap	vbfnc.vim	/^function! ColorMoveMap(var)$/;"	f
ColorMoveMap	vfunc.vim	/^function! ColorMoveMap(var)$/;"	f
ColorMoveUnMap	vfunc.vim	/^function! ColorMoveUnMap()$/;"	f
ColorWord	vfunc.vim	/^function! ColorWord()$/;"	f
Compile	vfunc.vim	/^function! Compile(flag)$/;"	f
CompileMap	vfunc.vim	/^function! CompileMap(flag)$/;"	f
CreateBrowser	vfunc.vim	/^function! CreateBrowser()$/;"	f
CreateFunctionDefinition	vfunc.vim	/^function! CreateFunctionDefinition()$/;"	f
CtrEnter	vfunc.vim	/^function! CtrEnter()$/;"	f
CtrLeave	vfunc.vim	/^function! CtrLeave()$/;"	f
CtrNew	vfunc.vim	/^function! CtrNew()$/;"	f
CtrTmpClean	vfunc.vim	/^function! CtrTmpClean()$/;"	f
CtrTmpEnter	vfunc.vim	/^function! CtrTmpEnter()$/;"	f
CtrTmpLeave	vfunc.vim	/^function! CtrTmpLeave()$/;"	f
CtrTmpRead	vfunc.vim	/^function! CtrTmpRead()$/;"	f
CtrWritePre	vfunc.vim	/^function! CtrWritePre()$/;"	f
CtrlXPP	SuperTab.vim	/^  fu! CtrlXPP()$/;"	f
CurrentIndentLevel	php-indent.vim	/^let s:CurrentIndentLevel = 0$/;"	v
CvsLastDiff	vfunc.vim	/^function! CvsLastDiff()$/;"	f
DI_FillAdjacent	DrawIt.vim	/^fu! <SID>DI_FillAdjacent(frow,fcolL,fcolR)$/;"	f
DI_FillLeft	DrawIt.vim	/^fu! <SID>DI_FillLeft(frow,fcol)$/;"	f
DI_FillRight	DrawIt.vim	/^fu! <SID>DI_FillRight(frow,fcol)$/;"	f
DI_Flood	DrawIt.vim	/^fu! <SID>DI_Flood(frow,fcol)$/;"	f
DI_Posn	DrawIt.vim	/^fu! <SID>DI_Posn(row,col)$/;"	f
DI_RestorePosn	DrawIt.vim	/^fu! s:DI_RestorePosn()$/;"	f
DI_SavePosn	DrawIt.vim	/^function! s:DI_SavePosn()$/;"	f
DartRead	vaucmd.vim	/^function! DartRead()$/;"	f
DeCmdMap	vfunc.vim	/^function! DeCmdMap()$/;"	f
Delete	vfunc.vim	/^function! Delete()$/;"	f
DeleteBashWordCmdline	vfunc.vim	/^function! DeleteBashWordCmdline()$/;"	f
DeleteBashWordInsert	vfunc.vim	/^function! DeleteBashWordInsert()$/;"	f
DialNumber	vfunc.vim	/^function! DialNumber()$/;"	f
DictCommon	vfunc.vim	/^function! DictCommon()$/;"	f
DictEnter	vfunc.vim	/^function! DictEnter()$/;"	f
DictPronounce	vfunc.vim	/^function! DictPronounce()$/;"	f
DictRootFind	vfunc.vim	/^function! DictRootFind()$/;"	f
DictThesFind	vfunc.vim	/^function! DictThesFind()$/;"	f
DictWordFind	vfunc.vim	/^function! DictWordFind()$/;"	f
DictWordFindV	vfunc.vim	/^function! DictWordFindV()$/;"	f
DirNode	info.vim	/^fun! s:DirNode()$/;"	f
DirStackEnter	vbfnc.vim	/^function! DirStackEnter()$/;"	f
DirStackLeave	vbfnc.vim	/^function! DirStackLeave()$/;"	f
DoChange	vfunc.vim	/^function! DoChange(prog)$/;"	f
DoGdbCont	ide.vim	/^function! DoGdbCont()$/;"	f
DoGdbData	ide.vim	/^function! DoGdbData()$/;"	f
DoGdbErrn	ide.vim	/^function! DoGdbErrn()$/;"	f
DoGdbKill	ide.vim	/^function! DoGdbKill()	$/;"	f
DoGdbLine	ide.vim	/^function! DoGdbLine()$/;"	f
DoGdbQuit	ide.vim	/^function! DoGdbQuit()$/;"	f
DotManEnter	vfunc.vim	/^function! DotManEnter()$/;"	f
DrChipTopLvlMenu	DrawIt.vim	/^   let g:DrChipTopLvlMenu= "DrChip."$/;"	v
Drag_end	DrawIt.vim	/^func! <SID>Drag_end()$/;"	f
Drag_start	DrawIt.vim	/^func! <SID>Drag_start()$/;"	f
DrawDown	DrawIt.vim	/^function! <SID>DrawDown()$/;"	f
DrawErase	DrawIt.vim	/^function! <SID>DrawErase()$/;"	f
DrawFatDArrow	DrawIt.vim	/^fu! <SID>DrawFatDArrow()$/;"	f
DrawFatLArrow	DrawIt.vim	/^fu! <SID>DrawFatLArrow()$/;"	f
DrawFatRArrow	DrawIt.vim	/^fu! <SID>DrawFatRArrow()$/;"	f
DrawFatUArrow	DrawIt.vim	/^fu! <SID>DrawFatUArrow()$/;"	f
DrawFour	DrawIt.vim	/^func! <SID>DrawFour(x,y,xoff,yoff,a,b)$/;"	f
DrawLeft	DrawIt.vim	/^function! <SID>DrawLeft()$/;"	f
DrawLine	DrawIt.vim	/^func! <SID>DrawLine(x0, y0, x1, y1, horiz)$/;"	f
DrawPlainLine	DrawIt.vim	/^func! <SID>DrawPlainLine(x0,y0,x1,y1)$/;"	f
DrawRight	DrawIt.vim	/^function! <SID>DrawRight()$/;"	f
DrawSlantDownLeft	DrawIt.vim	/^function! <SID>DrawSlantDownLeft()$/;"	f
DrawSlantDownRight	DrawIt.vim	/^function! <SID>DrawSlantDownRight()$/;"	f
DrawSlantUpLeft	DrawIt.vim	/^function! <SID>DrawSlantUpLeft()$/;"	f
DrawSlantUpRight	DrawIt.vim	/^function! <SID>DrawSlantUpRight()$/;"	f
DrawSpace	DrawIt.vim	/^function! <SID>DrawSpace(chr,dir)$/;"	f
DrawUp	DrawIt.vim	/^function! <SID>DrawUp()$/;"	f
EditPlaylist	vafnc.vim	/^function! EditPlaylist(action, from, ton)$/;"	f
ElanceCutProject	vfunc.vim	/^function! ElanceCutProject()$/;"	f
ElanceStart	vfunc.vim	/^function! ElanceStart()$/;"	f
Ellipse	DrawIt.vim	/^func! <SID>Ellipse(x0,y0,x1,y1)$/;"	f
ElnRead	vfunc.vim	/^function! ElnRead()$/;"	f
EmptystackP	closetag.vim	/^function! EmptystackP(sname)$/;"	f
EndofFunc	vmaps.vim	/^function! EndofFunc()$/;"	f
EnsureTrailingSeparator	multi-value.vim	/^function! s:EnsureTrailingSeparator(array, sep, ...)$/;"	f
EqualizerEnterHi	vafnc.vim	/^function! EqualizerEnterHi()$/;"	f
EqualizerGraphEnter	vafnc.vim	/^function! EqualizerGraphEnter()$/;"	f
EqualizerGraphLeave	ampleave.vim	/^function! EqualizerGraphLeave()$/;"	f
EqualizerHiSyntax	vafnc.vim	/^function! EqualizerHiSyntax()$/;"	f
EqualizerLoad	vafnc.vim	/^function! EqualizerLoad()$/;"	f
EqualizerRead	vafnc.vim	/^function! EqualizerRead()$/;"	f
EqualizerStatus	vafnc.vim	/^function! EqualizerStatus(flag)$/;"	f
Escape	multi-value.vim	/^function! s:Escape(str)$/;"	f
ExeLynx	vfunc.vim	/^function! ExeLynx()$/;"	f
ExecAMap	vmmap.vim	/^function! ExecAMap()$/;"	f
ExecMatchFunc	multi-value.vim	/^function! s:ExecMatchFunc(funcName, def, expr, pat, start)$/;"	f
ExecShellWithDir	vfunc.vim	/^function! ExecShellWithDir()$/;"	f
ExportQueryString	vfunc.vim	/^function! ExportQueryString(val)$/;"	f
FindOpenBracket	php-indent.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindTheIfOfAnElse	php-indent.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FixCprint	vimrc.vim	/^function! FixCprint()$/;"	f
FixSpellError	vfunc.vim	/^function! FixSpellError()$/;"	f
FixSpellErrorAll	vfunc.vim	/^function! FixSpellErrorAll()$/;"	f
FixVimRun	vfunc.vim	/^function! FixVimRun(filename)$/;"	f
FixVimRunPhp	vfunc.vim	/^function! FixVimRunPhp(filename)$/;"	f
FixWindowSize	vafnc.vim	/^function! FixWindowSize()$/;"	f
Flood	DrawIt.vim	/^fu! <SID>Flood()$/;"	f
FolderStl	vimrc.vim	/^function! FolderStl()$/;"	f
FollowLink	info.vim	/^fun! s:FollowLink()$/;"	f
Followlink	vfunc.vim	/^function! Followlink()$/;"	f
GdbAttach	ide.vim	/^function! GdbAttach()$/;"	f
GdbCall	ide.vim	/^function! GdbCall(...)$/;"	f
GdbDataChange	ide.vim	/^function! GdbDataChange(val)$/;"	f
GdbDataEnter	ide.vim	/^function! GdbDataEnter()$/;"	f
GdbDataLeave	ide.vim	/^function! GdbDataLeave()$/;"	f
GdbDataRead	ide.vim	/^function! GdbDataRead()$/;"	f
GdbDatage	vextr.vim	/^function! GdbDatage(val)$/;"	f
GdbEnterFunction	vfunc.vim	/^function! GdbEnterFunction()$/;"	f
GdbFullVar	vfunc.vim	/^function! GdbFullVar(data, flag)$/;"	f
GdbModule	vtmp.vim	/^function! GdbModule()$/;"	f
GdbModulesource	vtmp.vim	/^function! GdbModulesource()$/;"	f
GdbMyAttach	vfunc.vim	/^function! GdbMyAttach()$/;"	f
GdbPhpReachHere	vfunc.vim	/^function! GdbPhpReachHere()$/;"	f
GdbResModulesource	vtmp.vim	/^function! GdbResModulesource()$/;"	f
GdbScrollCall	vmmap.vim	/^function! GdbScrollCall(cmd)$/;"	f
GdbStep	vextr.vim	/^function! GdbStep()$/;"	f
GdbVimLeave	ide.vim	/^function! GdbVimLeave()$/;"	f
GetArrayPos	vfunc.vim	/^function! GetArrayPos()$/;"	f
GetAsmAddress	ide.vim	/^function! GetAsmAddress()$/;"	f
GetAudioFileName	vfunc.vim	/^function! GetAudioFileName(l)$/;"	f
GetCSong	vafnc.vim	/^function! GetCSong()$/;"	f
GetCSongPos	vafnc.vim	/^function! GetCSongPos()$/;"	f
GetCWord	vfunc.vim	/^function! GetCWord()$/;"	f
GetCharUnderCursor	vfunc.vim	/^function! GetCharUnderCursor()$/;"	f
GetChords	vfunc.vim	/^function! GetChords(f)$/;"	f
GetChordsOld	vfunc.vim	/^function! GetChordsOld(n)$/;"	f
GetCloseTag	closetag.vim	/^function! GetCloseTag()$/;"	f
GetCurrentSong	vafnc.vim	/^function! GetCurrentSong()$/;"	f
GetDateFromMail	vfunc.vim	/^function! GetDateFromMail()$/;"	f
GetDirHome	vfunc.vim	/^function! GetDirHome()$/;"	f
GetExe	ide.vim	/^function! GetExe(flag)$/;"	f
GetFileFromList	vfunc.vim	/^function! GetFileFromList()$/;"	f
GetHostName	vimrc.vim	/^function! GetHostName()$/;"	f
GetLastOpenTag	closetag.vim	/^function! GetLastOpenTag(unaryTagsStack)$/;"	f
GetLastRealCodeLNum	php-indent.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetLyrics	vafnc.vim	/^function! GetLyrics()$/;"	f
GetMailbox	vfunc.vim	/^function! GetMailbox()$/;"	f
GetMboxLine	vfunc.vim	/^function! GetMboxLine()$/;"	f
GetMiddleVariable	vfunc.vim	/^function! GetMiddleVariable(var)$/;"	f
GetNextInOrder	multi-value.vim	/^function! s:GetNextInOrder(val, val1, val2, dir)$/;"	f
GetPhpIndent	php-indent.vim	/^function! GetPhpIndent()$/;"	f
GetSubmatch	info.vim	/^fun! s:GetSubmatch(string, pattern)$/;"	f
GetVolume	vafnc.vim	/^function! GetVolume()$/;"	f
GetWinNrSource	ide.vim	/^function! GetWinNrSource()$/;"	f
GrepSearch	vfunc.vim	/^function! GrepSearch(string)$/;"	f
HNewFile	vfunc.vim	/^function! HNewFile()$/;"	f
HasTrailingSeparator	multi-value.vim	/^function! s:HasTrailingSeparator(array, sep)$/;"	f
Help	info.vim	/^fun! s:Help()$/;"	f
HelpEnter	vafnc.vim	/^function! HelpEnter()$/;"	f
HelpSyntax	vafnc.vim	/^function! HelpSyntax()$/;"	f
HexvalMapToggle	vfunc.vim	/^function! HexvalMapToggle()$/;"	f
Hide	vafnc.vim	/^function! Hide()$/;"	f
Holer	DrawIt.vim	/^func! <SID>Holer()$/;"	f
HtmlIncludeExpr	vhtmlab.vim	/^function! HtmlIncludeExpr(a)$/;"	f
HtmlIncludeExpr	vimrc.vim	/^function! HtmlIncludeExpr(a)$/;"	f
ID_search	vfunc.vim	/^function! ID_search()$/;"	f
IdeMake	ide.vim	/^function! IdeMake()$/;"	f
IdeRun	vsmap.vim	/^function! IdeRun()$/;"	f
IfBitSet	ide.vim	/^function! IfBitSet(val, bit)$/;"	f
InComment	closetag.vim	/^function! InComment()$/;"	f
InCommentAt	closetag.vim	/^function! InCommentAt(line, col)$/;"	f
Indent	vcpp.vim	/^function! Indent(flag)$/;"	f
Info	info.vim	/^fun! s:Info(...)$/;"	f
InfoBufferInit	info.vim	/^fun! s:InfoBufferInit()$/;"	f
InfoExec	info.vim	/^fun! s:InfoExec(file, node, ...)$/;"	f
InfoFirstLine	info.vim	/^fun! s:InfoFirstLine()$/;"	f
InitBufList	vfunc.vim	/^function! InitBufList()$/;"	f
Instack	closetag.vim	/^function! Instack(el, sname)$/;"	f
IsBoundary	DrawIt.vim	/^fu! <SID>IsBoundary(row,col)$/;"	f
IsMetaChar	vfunc.vim	/^function! IsMetaChar(c)$/;"	f
IsRegularExpression	multi-value.vim	/^function! s:IsRegularExpression(str)$/;"	f
IswitchLastSearch	vswitchb.vim	/^function! IswitchLastSearch()$/;"	f
IswitchbBreak	vswitchb.vim	/^function! IswitchbBreak()$/;"	f
IswitchbCommandChar	vswitchb.vim	/^function! IswitchbCommandChar(char)$/;"	f
IswitchbCommandMap	vswitchb.vim	/^function! IswitchbCommandMap()$/;"	f
IswitchbDelChar	vswitchb.vim	/^function! IswitchbDelChar()$/;"	f
IswitchbInit	vswitchb.vim	/^function! IswitchbInit()$/;"	f
IswitchbLeave	vswitchb.vim	/^function! IswitchbLeave()$/;"	f
IswitchbSaveVar	vswitchb.vim	/^function! IswitchbSaveVar()$/;"	f
IswitchbUpdateBuffer	vswitchb.vim	/^function! IswitchbUpdateBuffer()$/;"	f
JumpListEnter	vafnc.vim	/^function! JumpListEnter()$/;"	f
JumpListLeave	ampleave.vim	/^function! JumpListLeave()$/;"	f
JumpNextShow	vfunc.vim	/^function! JumpNextShow()$/;"	f
JumpPrevShow	vfunc.vim	/^function! JumpPrevShow()$/;"	f
JumpTo	vafnc.vim	/^function! JumpTo(name)$/;"	f
JumpToWin	vafnc.vim	/^function! JumpToWin(number)$/;"	f
JumplistHi	vafnc.vim	/^function! JumplistHi()$/;"	f
JustColor	vfunc.vim	/^function! JustColor()$/;"	f
KernelEnter	vfunc.vim	/^function! KernelEnter()$/;"	f
KernelGetName	vfunc.vim	/^function! KernelGetName()$/;"	f
KernelModule	vfunc.vim	/^function! KernelModule()$/;"	f
KernelNo	vfunc.vim	/^function! KernelNo()$/;"	f
KernelYes	vfunc.vim	/^function! KernelYes()$/;"	f
LastIndentedWasComment	php-indent.vim	/^let s:LastIndentedWasComment = 0$/;"	v
LastNode	info.vim	/^fun! s:LastNode()$/;"	f
LibCallAmp	vafnc.vim	/^function! LibCallAmp(function, var)$/;"	f
LibCallNrAmp	vafnc.vim	/^function! LibCallNrAmp(function, var)$/;"	f
LiricsAgain	vafnc.vim	/^function! LiricsAgain()$/;"	f
ListBuf	vfunc.vim	/^function! ListBuf()$/;"	f
ListEnter	vfunc.vim	/^function! ListEnter()$/;"	f
ListLeave	vfunc.vim	/^function! ListLeave()$/;"	f
ListMarks	vfunc.vim	/^function! ListMarks()$/;"	f
ListProcess	vfunc.vim	/^function! ListProcess(split)$/;"	f
ListQuit	vfunc.vim	/^function! ListQuit()$/;"	f
LoadDrawIt	DrawIt.vim	/^ fu! <SID>LoadDrawIt()$/;"	f
LoadModuletmp	vtmp.vim	/^function! LoadModuletmp()$/;"	f
LoadPLaylist	vafnc.vim	/^function! LoadPLaylist()$/;"	f
LoadResModuletmp	vtmp.vim	/^function! LoadResModuletmp()$/;"	f
LocalMachine	vfunc.vim	/^function! LocalMachine()$/;"	f
Lxclass	phplib.php	/^class Lxclass extends Lxclass {$/;"	c
LxsqlEnter	vaucmd.vim	/^function! LxsqlEnter()$/;"	f
LynxKey	vfunc.vim	/^function! LynxKey(string)$/;"	f
LyricsEnter	vafnc.vim	/^function! LyricsEnter()$/;"	f
LyricsEnterHi	vafnc.vim	/^function! LyricsEnterHi()$/;"	f
LyricsHiSyntax	vafnc.vim	/^function! LyricsHiSyntax()$/;"	f
LyricsLeave	ampleave.vim	/^function! LyricsLeave()$/;"	f
LyricsRead	vafnc.vim	/^function! LyricsRead()$/;"	f
M3uEnter	vafnc.vim	/^function! M3uEnter()$/;"	f
MainMelnRead	vfunc.vim	/^function! MainMelnRead()$/;"	f
MakeFullScreen	vafnc.vim	/^function! MakeFullScreen()$/;"	f
Makesess	vfunc.vim	/^function! Makesess()$/;"	f
Manual	vfunc.vim	/^function! Manual(flag,comm)$/;"	f
ManualChange	vfunc.vim	/^function! ManualChange()$/;"	f
ManualLirics	vafnc.vim	/^function! ManualLirics()$/;"	f
MapExternKey	vafnc.vim	/^function! MapExternKey()$/;"	f
MapGrep	vfunc.vim	/^function! MapGrep()$/;"	f
MapGrepFind	vfunc.vim	/^function! MapGrepFind()$/;"	f
MapID	vfunc.vim	/^function! MapID()$/;"	f
MapNope	vafnc.vim	/^function! MapNope()$/;"	f
MapTriggerKeys	vafnc.vim	/^function! MapTriggerKeys()$/;"	f
MapViSameDir	vfunc.vim	/^function! MapViSameDir()$/;"	f
MarkEnter	vfunc.vim	/^function! MarkEnter()$/;"	f
MasterEnter	vfunc.vim	/^function! MasterEnter()$/;"	f
MasterWordEnter	vfunc.vim	/^function! MasterWordEnter()$/;"	f
Match	multi-value.vim	/^function! s:Match(expr, pat, start)$/;"	f
Matchend	multi-value.vim	/^function! s:Matchend(expr, pat, start)$/;"	f
Matchstr	multi-value.vim	/^function! s:Matchstr(expr, pat, start)$/;"	f
MelnRead	vfunc.vim	/^function! MelnRead()$/;"	f
MenuCurrentSyntax	vafnc.vim	/^function! MenuCurrentSyntax()$/;"	f
MenuEnter	vafnc.vim	/^function! MenuEnter()$/;"	f
MenuEnterHilight	vafnc.vim	/^function! MenuEnterHilight()$/;"	f
MenuHiSyntax	vafnc.vim	/^function! MenuHiSyntax()$/;"	f
MenuLeave	ampleave.vim	/^function! MenuLeave()$/;"	f
MlistBegBlock	vfunc.vim	/^function! MlistBegBlock()$/;"	f
MlistEnter	vfunc.vim	/^function! MlistEnter()$/;"	f
MoveDown	DrawIt.vim	/^fu! <SID>MoveDown()$/;"	f
MoveLeft	DrawIt.vim	/^fu! <SID>MoveLeft()$/;"	f
MoveRight	DrawIt.vim	/^fu! <SID>MoveRight()$/;"	f
MoveUp	DrawIt.vim	/^fu! <SID>MoveUp()$/;"	f
MuttEnter	vfunc.vim	/^function! MuttEnter()$/;"	f
MuttRead	vfunc.vim	/^function! MuttRead()$/;"	f
MuttSendDirectly	vfunc.vim	/^function! MuttSendDirectly()$/;"	f
MvAddElement	multi-value.vim	/^function! MvAddElement(array, sep, ele, ...)$/;"	f
MvBISortElements	multi-value.vim	/^function! MvBISortElements(array, sep, cmp, direction, ...)$/;"	f
MvCmpByPosition	multi-value.vim	/^function! MvCmpByPosition(array, sep, ele1, ele2, direction, ...)$/;"	f
MvContainsElement	multi-value.vim	/^function! MvContainsElement(array, sep, ele, ...)$/;"	f
MvContainsPattern	multi-value.vim	/^function! MvContainsPattern(array, sep, pat, ...)$/;"	f
MvCrUnProtectedCharsPattern	multi-value.vim	/^function! MvCrUnProtectedCharsPattern(sepChars)$/;"	f
MvElementAt	multi-value.vim	/^function! MvElementAt(array, sep, index, ...)$/;"	f
MvElementLike	multi-value.vim	/^function! MvElementLike(array, sep, pat, ...)$/;"	f
MvGetSelectedIndex	multi-value.vim	/^function! MvGetSelectedIndex()$/;"	f
MvIndexOfElement	multi-value.vim	/^function! MvIndexOfElement(array, sep, ele, ...)$/;"	f
MvIndexOfElementImpl	multi-value.vim	/^function! s:MvIndexOfElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvIndexOfPattern	multi-value.vim	/^function! MvIndexOfPattern(array, sep, pat, ...)$/;"	f
MvInsertElementAt	multi-value.vim	/^function! MvInsertElementAt(array, sep, ele, index, ...)$/;"	f
MvIterCreate	multi-value.vim	/^function! MvIterCreate(array, sep, iterName, ...)$/;"	f
MvIterDestroy	multi-value.vim	/^function! MvIterDestroy(iterName)$/;"	f
MvIterHasNext	multi-value.vim	/^function! MvIterHasNext(iterName)$/;"	f
MvIterNext	multi-value.vim	/^function! MvIterNext(iterName)$/;"	f
MvIterNext	multi-value.vim	/^function! s:MvIterNext(iterName, peek)$/;"	f
MvIterPeek	multi-value.vim	/^function! MvIterPeek(iterName)$/;"	f
MvLastElement	multi-value.vim	/^function! MvLastElement(array, sep, ...)$/;"	f
MvNumSearchNext	multi-value.vim	/^function! MvNumSearchNext(array, sep, ele, dir, ...)$/;"	f
MvNumberOfElements	multi-value.vim	/^function! MvNumberOfElements(array, sep, ...)$/;"	f
MvPromptForElement	multi-value.vim	/^function! MvPromptForElement(array, sep, default, msg, skip, useDialog, ...)$/;"	f
MvPromptForElement2	multi-value.vim	/^function! MvPromptForElement2(array, sep, default, msg, skip, useDialog, nCols,$/;"	f
MvPullToBack	multi-value.vim	/^function! MvPullToBack(array, sep, ele, ...)$/;"	f
MvPullToBackElementAt	multi-value.vim	/^function! MvPullToBackElementAt(array, sep, index, ...)$/;"	f
MvPushToFront	multi-value.vim	/^function! MvPushToFront(array, sep, ele, ...)$/;"	f
MvPushToFrontElementAt	multi-value.vim	/^function! MvPushToFrontElementAt(array, sep, index, ...)$/;"	f
MvQSortElements	multi-value.vim	/^function! MvQSortElements(array, sep, cmp, direction, ...)$/;"	f
MvRemoveElement	multi-value.vim	/^function! MvRemoveElement(array, sep, ele, ...)$/;"	f
MvRemoveElementAll	multi-value.vim	/^function! MvRemoveElementAll(array, sep, ele, ...)$/;"	f
MvRemoveElementAt	multi-value.vim	/^function! MvRemoveElementAt(array, sep, index, ...)$/;"	f
MvRemoveElementImpl	multi-value.vim	/^function! s:MvRemoveElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvRemovePattern	multi-value.vim	/^function! MvRemovePattern(array, sep, pat, ...)$/;"	f
MvRemovePatternAll	multi-value.vim	/^function! MvRemovePatternAll(array, sep, pat, ...)$/;"	f
MvReplaceElementAt	multi-value.vim	/^function! MvReplaceElementAt(array, sep, ele, index, ...)$/;"	f
MvRotateLeftAt	multi-value.vim	/^function! MvRotateLeftAt(array, sep, index, ...)$/;"	f
MvRotateRightAt	multi-value.vim	/^function! MvRotateRightAt(array, sep, index, ...)$/;"	f
MvSortElements	multi-value.vim	/^function! s:MvSortElements(array, sep, cmp, direction, sortFunc, acc, wrt,$/;"	f
MvStrIndexAfterElement	multi-value.vim	/^function! MvStrIndexAfterElement(array, sep, ele, ...)$/;"	f
MvStrIndexAfterElementImpl	multi-value.vim	/^function! s:MvStrIndexAfterElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvStrIndexAfterPattern	multi-value.vim	/^function! MvStrIndexAfterPattern(array, sep, pat, ...)$/;"	f
MvStrIndexOfElement	multi-value.vim	/^function! MvStrIndexOfElement(array, sep, ele, ...)$/;"	f
MvStrIndexOfElementAt	multi-value.vim	/^function! MvStrIndexOfElementAt(array, sep, index, ...)$/;"	f
MvStrIndexOfElementImpl	multi-value.vim	/^function! s:MvStrIndexOfElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvStrIndexOfPattern	multi-value.vim	/^function! MvStrIndexOfPattern(array, sep, pat, ...)$/;"	f
MvSwapElementsAt	multi-value.vim	/^function! MvSwapElementsAt(array, sep, index1, index2, ...)$/;"	f
MyIdestart	vsmap.vim	/^function! MyIdestart()$/;"	f
MyScriptId	multi-value.vim	/^function! s:MyScriptId()$/;"	f
MySpellCheck	vfunc.vim	/^function! MySpellCheck()$/;"	f
MyStl	vimrc.vim	/^function! MyStl(...)$/;"	f
MyStlGdb	ide.vim	/^function! MyStlGdb()$/;"	f
NewTempFile	vaucmd.vim	/^function! NewTempFile(base)$/;"	f
NextNode	info.vim	/^fun! s:NextNode()$/;"	f
NextRef	info.vim	/^fun! s:NextRef()$/;"	f
NormalLyrics	vafnc.vim	/^function! NormalLyrics()$/;"	f
NsWordEnter	vfunc.vim	/^function! NsWordEnter()$/;"	f
OpenAllWin	vafnc.vim	/^function! OpenAllWin()$/;"	f
OpenAmpBrowser	vafnc.vim	/^function! OpenAmpBrowser()$/;"	f
OpenEqualizer	vafnc.vim	/^function! OpenEqualizer(arg)$/;"	f
OpenHelp	vafnc.vim	/^function! OpenHelp()$/;"	f
OpenLyrics	vafnc.vim	/^function! OpenLyrics()$/;"	f
OpenPr	vfunc.vim	/^function! OpenPr()$/;"	f
OpenPrg	vafnc.vim	/^function! OpenPrg()$/;"	f
OutEnter	vfunc.vim	/^function! OutEnter()$/;"	f
PRMap	vfunc.vim	/^function! PRMap()$/;"	f
PRStatus	vfunc.vim	/^function! PRStatus()$/;"	f
PdfEnter	vfunc.vim	/^function! PdfEnter()$/;"	f
Peekstack	closetag.vim	/^function! Peekstack(sname)$/;"	f
PhpEnter	vfunc.vim	/^function! PhpEnter()$/;"	f
PidOff	vsmap.vim	/^function! PidOff(name)$/;"	f
PlayAudioFile	vfunc.vim	/^function! PlayAudioFile(f)$/;"	f
PlayListEnter	vafnc.vim	/^function! PlayListEnter()$/;"	f
PlayListLeave	ampleave.vim	/^function! PlayListLeave()$/;"	f
Pop	closetag.vim	/^function! Pop(sname)$/;"	f
PrevNode	info.vim	/^fun! s:PrevNode()$/;"	f
Print	vfunc.vim	/^function! Print()$/;"	f
PrintLineInfo	vfunc.vim	/^function! PrintLineInfo(efs)$/;"	f
ProblemReportEnter	vfunc.vim	/^function! ProblemReportEnter()$/;"	f
ProblemReportQuit	vfunc.vim	/^function! ProblemReportQuit()$/;"	f
ProblemReportRead	vfunc.vim	/^function! ProblemReportRead()$/;"	f
Process	vbfnc.vim	/^function! Process(val)$/;"	f
ProcessMenu	vafnc.vim	/^function! ProcessMenu(flag)$/;"	f
ProcessMenuCmd	vafnc.vim	/^function! ProcessMenuCmd(val)$/;"	f
Propose	spellcheck.vim	/^function Propose()$/;"	f
Push	closetag.vim	/^function! Push(el, sname)$/;"	f
PutChords	vfunc.vim	/^function! PutChords(f)$/;"	f
PutInLynx	vfunc.vim	/^function! PutInLynx()$/;"	f
QprEnter	vfunc.vim	/^function! QprEnter()$/;"	f
QprReadNew	vfunc.vim	/^function! QprReadNew()$/;"	f
QprReadPre	vfunc.vim	/^function! QprReadPre()$/;"	f
QuickFixEnter	vfunc.vim	/^function! QuickFixEnter()$/;"	f
QuickFixLeave	vfunc.vim	/^function! QuickFixLeave()$/;"	f
ReMaps	vimrc.vim	/^function! ReMaps()$/;"	f
ReadInclude	vfunc.vim	/^function! ReadInclude()$/;"	f
RecurseAdd	vbfnc.vim	/^function! RecurseAdd(val)$/;"	f
RemoveCprint	vfunc.vim	/^function! RemoveCprint()$/;"	f
ReplaceDownLeft	DrawIt.vim	/^fu! <SID>ReplaceDownLeft()$/;"	f
ReplaceDownRight	DrawIt.vim	/^fu! <SID>ReplaceDownRight()$/;"	f
ReplaceTemplate	vfunc.vim	/^function! ReplaceTemplate()$/;"	f
Restore	vfunc.vim	/^function! Restore(flag)$/;"	f
RestoreEdit	vafnc.vim	/^function! RestoreEdit()$/;"	f
RestoreHeight	vfunc.vim	/^function! RestoreHeight()$/;"	f
RestoreKeywords	closetag.vim	/^function! RestoreKeywords()$/;"	f
RunPending	ide.vim	/^function! RunPending()$/;"	f
SaveMap	DrawIt.vim	/^fu! <SID>SaveMap(mapmode,maplead,mapchx)$/;"	f
SaveSession	ide.vim	/^function! SaveSession()$/;"	f
Savereg	vfunc.vim	/^function! Savereg()$/;"	f
ScDelItself	vaucmd.vim	/^function! ScDelItself()$/;"	f
SclistLeave	vaucmd.vim	/^function! SclistLeave()$/;"	f
SclistRead	vaucmd.vim	/^function! SclistRead()$/;"	f
ScpEnter	vaucmd.vim	/^function! ScpEnter()$/;"	f
ScpLeave	vaucmd.vim	/^function! ScpLeave()$/;"	f
ScpRead	vaucmd.vim	/^function! ScpRead()$/;"	f
ScreenDelete	vaucmd.vim	/^function! ScreenDelete()$/;"	f
ScreenGetWindow	vaucmd.vim	/^function! ScreenGetWindow()$/;"	f
ScreenSendCommand	vaucmd.vim	/^function! ScreenSendCommand(command, win)$/;"	f
ScreenVDelete	vaucmd.vim	/^function! ScreenVDelete()$/;"	f
ScrollMap	vfunc.vim	/^function! ScrollMap()$/;"	f
ScrollMapToggle	vfunc.vim	/^function! ScrollMapToggle()$/;"	f
ScrollOther	vfunc.vim	/^function! ScrollOther(val)$/;"	f
ScrollUnMap	vfunc.vim	/^function! ScrollUnMap()$/;"	f
Search	info.vim	/^fun! s:Search()$/;"	f
SearchCompl	search-compl.vim	/^function! SearchCompl(flag)$/;"	f
SearchCompl_loaded	search-compl.vim	/^let g:SearchCompl_loaded = 1$/;"	v
SeeLocal	vfunc.vim	/^function! SeeLocal()$/;"	f
SeeProjectLynx	vfunc.vim	/^function! SeeProjectLynx()$/;"	f
SelectAdd	vbfnc.vim	/^function! SelectAdd(val)$/;"	f
SelectAllScreen	vaucmd.vim	/^function! SelectAllScreen()$/;"	f
SelectClear	vbfnc.vim	/^function! SelectClear()$/;"	f
SelectScreen	vaucmd.vim	/^function! SelectScreen()$/;"	f
SendActionPlay	vafnc.vim	/^function! SendActionPlay(play_a, flag)$/;"	f
SendMailBox	vfunc.vim	/^function! SendMailBox()$/;"	f
SendMpg	vafnc.vim	/^function! SendMpg(act, from, to)$/;"	f
SendToServer	ide.vim	/^function! SendToServer(cmd, var)$/;"	f
SetCharAt	DrawIt.vim	/^func! <SID>SetCharAt(char, x, y)$/;"	f
SetDrawIt	DrawIt.vim	/^function! SetDrawIt(di_vert,di_horiz,di_plus,di_upleft,di_upright,di_cross)$/;"	f
SetGDull	vafnc.vim	/^function! SetGDull(arg)$/;"	f
SetGdbStl	ide.vim	/^function! SetGdbStl(flag, cmd)$/;"	f
SetKeywords	closetag.vim	/^function! SetKeywords()$/;"	f
SetScrollOther	vfunc.vim	/^function! SetScrollOther()$/;"	f
SetStl	ide.vim	/^function! SetStl()$/;"	f
SetStl	vimrc.vim	/^function! SetStl()$/;"	f
SetViminfo	vfunc.vim	/^function! SetViminfo()$/;"	f
SetViminfo	vimrc.vim	/^function! SetViminfo()$/;"	f
SetVncServer	vaucmd.vim	/^function! SetVncServer()$/;"	f
ShellFixVimRun	vfunc.vim	/^function! ShellFixVimRun()$/;"	f
ShowMenuTip	vafnc.vim	/^function! ShowMenuTip()$/;"	f
Skippmatch	php-indent.vim	/^function! Skippmatch()  " {{{$/;"	f
SmsCompose	vaucmd.vim	/^function! SmsCompose(flag)$/;"	f
SmsGetNumber	vaucmd.vim	/^function! SmsGetNumber(flag)$/;"	f
SmsListEnter	vaucmd.vim	/^function! SmsListEnter()$/;"	f
SmsListRead	vaucmd.vim	/^function! SmsListRead()$/;"	f
SmsQuit	vaucmd.vim	/^function! SmsQuit()$/;"	f
SmsSave	vaucmd.vim	/^function! SmsSave()$/;"	f
SmsSend	vaucmd.vim	/^function! SmsSend()$/;"	f
SmsSyntax	vaucmd.vim	/^function! SmsSyntax()$/;"	f
SongChanged	vafnc.vim	/^function! SongChanged(arg)$/;"	f
SortGetElementAt	multi-value.vim	/^function! s:SortGetElementAt(index, context)$/;"	f
SortMoveElement	multi-value.vim	/^function! s:SortMoveElement(from, to, context)$/;"	f
SortSwapElements	multi-value.vim	/^function! s:SortSwapElements(index1, index2, context)$/;"	f
SpaceMap	vfunc.vim	/^function! SpaceMap()$/;"	f
Spacer	DrawIt.vim	/^func! <SID>Spacer(debut, fin)$/;"	f
Spacer	multi-value.vim	/^function! s:Spacer(width)$/;"	f
SpchkNxt	spellcheck.vim	/^function! SpchkNxt()$/;"	f
SpchkPrv	spellcheck.vim	/^function! SpchkPrv()$/;"	f
SpellCheck	spellcheck.vim	/^function SpellCheck()$/;"	f
SpellCheckWord	vfunc.vim	/^function! SpellCheckWord()$/;"	f
SpellCleanup	vfunc.vim	/^function! SpellCleanup()$/;"	f
SpellIgnoreWord	vfunc.vim	/^function! SpellIgnoreWord()$/;"	f
SpellList	vfunc.vim	/^function! SpellList(flag)$/;"	f
SpellListEnter	vfunc.vim	/^function! SpellListEnter()$/;"	f
SpellSetCurrentWord	vfunc.vim	/^function! SpellSetCurrentWord()$/;"	f
SpellSkipWord	vfunc.vim	/^function! SpellSkipWord()$/;"	f
SplitStl	ide.vim	/^function! SplitStl()$/;"	f
StartDrawIt	DrawIt.vim	/^function! <SID>StartDrawIt()$/;"	f
StatusDelim	vafnc.vim	/^function! StatusDelim()$/;"	f
StatusError	vfunc.vim	/^function! StatusError()$/;"	f
StatusLeft	vafnc.vim	/^function! StatusLeft()$/;"	f
StatusRight	vafnc.vim	/^function! StatusRight()$/;"	f
StatusRightDelim	vafnc.vim	/^function! StatusRightDelim()$/;"	f
StopDrawIt	DrawIt.vim	/^function! <SID>StopDrawIt()$/;"	f
StoreLines	vfunc.vim	/^function! StoreLines()$/;"	f
SuperTab	SuperTab.vim	/^  fu! <SID>SuperTab()$/;"	f
SweepSearch	vafnc.vim	/^function! SweepSearch()$/;"	f
SwitchWindows	vafnc.vim	/^function! SwitchWindows()$/;"	f
SyntaxMainCSong	vafnc.vim	/^function! SyntaxMainCSong()$/;"	f
TagJump	vmmap.vim	/^function! TagJump()$/;"	f
TagListAutoCmds	taglist.vim	/^    augroup TagListAutoCmds$/;"	a
TagList_IsValid	taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	taglist.vim	/^let TagList_title = "__Tag_List__"$/;"	v
Test	vfunc.vim	/^function! Test()$/;"	f
ThirdWindowEnter	vafnc.vim	/^function! ThirdWindowEnter()$/;"	f
ThirdWindowIfExtern	vafnc.vim	/^function! ThirdWindowIfExtern()$/;"	f
Tlist_Auto_Highlight_Tag	taglist.vim	/^    let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	taglist.vim	/^    let Tlist_Auto_Open = 0$/;"	v
Tlist_Change_Sort	taglist.vim	/^function! s:Tlist_Change_Sort()$/;"	f
Tlist_Check_Only_Window	taglist.vim	/^function! s:Tlist_Check_Only_Window()$/;"	f
Tlist_Close_Window	taglist.vim	/^function! s:Tlist_Close_Window()$/;"	f
Tlist_Compact_Format	taglist.vim	/^    let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	taglist.vim	/^        let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	taglist.vim	/^        let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	taglist.vim	/^        let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	taglist.vim	/^        let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Discard_FileInfo	taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Help	taglist.vim	/^function! s:Tlist_Display_Help()$/;"	f
Tlist_Display_Prototype	taglist.vim	/^    let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	taglist.vim	/^    let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	taglist.vim	/^    let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exit_OnlyWindow	taglist.vim	/^    let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Explore_File	taglist.vim	/^function! s:Tlist_Explore_File(filename, ftype)$/;"	f
Tlist_Extract_Tag_Prototype	taglist.vim	/^function! s:Tlist_Extract_Tag_Prototype(tag_txt)$/;"	f
Tlist_Extract_Tag_Scope	taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_txt)$/;"	f
Tlist_Extract_Tagtype	taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_txt)$/;"	f
Tlist_FileType_Init	taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	taglist.vim	/^    let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Tag_text	taglist.vim	/^function! s:Tlist_Find_Tag_text(fidx, linenum)$/;"	f
Tlist_Get_File_Index	taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_File_Index_By_Linenum	taglist.vim	/^function! s:Tlist_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Get_Tag_Index	taglist.vim	/^function! s:Tlist_Get_Tag_Index(fidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tagname_By_Line	taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag	taglist.vim	/^function! s:Tlist_Highlight_Tag(filename, curline, cntx)$/;"	f
Tlist_Highlight_Tagline	taglist.vim	/^function! s:Tlist_Highlight_Tagline()$/;"	f
Tlist_Inc_Winwidth	taglist.vim	/^        let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	taglist.vim	/^        let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Inc_Winwidth	taglist.vim	/^let g:Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Init_File	taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Init_Window	taglist.vim	/^function! s:Tlist_Init_Window()$/;"	f
Tlist_Jump_To_Tag	taglist.vim	/^function! s:Tlist_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Move_To_File	taglist.vim	/^function! s:Tlist_Move_To_File(dir)$/;"	f
Tlist_Open_File	taglist.vim	/^function! s:Tlist_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Open_Window	taglist.vim	/^function! s:Tlist_Open_Window()$/;"	f
Tlist_Post_Close_Cleanup	taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_File	taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	taglist.vim	/^    let Tlist_Process_File_Always = 0$/;"	v
Tlist_Refresh	taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Window	taglist.vim	/^function! s:Tlist_Refresh_Window()$/;"	f
Tlist_Remove_File	taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Remove_File_From_Display	taglist.vim	/^function! s:Tlist_Remove_File_From_Display(fidx)$/;"	f
Tlist_Session_Load	taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_One_File	taglist.vim	/^    let Tlist_Show_One_File = 0$/;"	v
Tlist_Show_Tag_Prototype	taglist.vim	/^function! s:Tlist_Show_Tag_Prototype()$/;"	f
Tlist_Skip_File	taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Skip_Refresh	taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
Tlist_Sort_Type	taglist.vim	/^    let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Toggle_Help_Text	taglist.vim	/^function! s:Tlist_Toggle_Help_Text()$/;"	f
Tlist_Toggle_Window	taglist.vim	/^function! s:Tlist_Toggle_Window()$/;"	f
Tlist_Update_File_Display	taglist.vim	/^function! s:Tlist_Update_File_Display(filename, action)$/;"	f
Tlist_Update_File_Tags	taglist.vim	/^function! Tlist_Update_File_Tags(filename, ftype)$/;"	f
Tlist_Update_Line_Offsets	taglist.vim	/^function! s:Tlist_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Update_Tags	taglist.vim	/^function! s:Tlist_Update_Tags()$/;"	f
Tlist_Update_Window	taglist.vim	/^function! s:Tlist_Update_Window()$/;"	f
Tlist_Use_Horiz_Window	taglist.vim	/^    let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	taglist.vim	/^    let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_Right_Window	taglist.vim	/^let g:Tlist_Use_Right_Window = 1$/;"	v
Tlist_Use_SingleClick	taglist.vim	/^    let Tlist_Use_SingleClick = 0$/;"	v
Tlist_Warning_Msg	taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	taglist.vim	/^    let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	taglist.vim	/^    let Tlist_WinWidth = 30$/;"	v
Tlist_Zoom_Window	taglist.vim	/^function! s:Tlist_Zoom_Window()$/;"	f
Toggle	vfunc.vim	/^function! Toggle(flag, ...)$/;"	f
ToggleAll	vbfnc.vim	/^function! ToggleAll()$/;"	f
ToggleStl	vfunc.vim	/^function! ToggleStl(flag, val)$/;"	f
ToggleWindow	vfunc.vim	/^function! ToggleWindow()$/;"	f
TopNode	info.vim	/^fun! s:TopNode()$/;"	f
UNPROTECTED_CHAR_PRFX	multi-value.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
UnMapArrow	vimrc.vim	/^function! UnMapArrow()$/;"	f
Unwnated	ampleave.vim	/^function! Unwnated()$/;"	f
UpNode	info.vim	/^fun! s:UpNode()$/;"	f
UpdateCurrentSong	vafnc.vim	/^function! UpdateCurrentSong(arg)$/;"	f
UpdateProgBar	vafnc.vim	/^function! UpdateProgBar()$/;"	f
UpdateProject	ide.vim	/^function! UpdateProject()$/;"	f
UpdateVars	vfunc.vim	/^function! UpdateVars()$/;"	f
UrlListEnter	vaucmd.vim	/^function! UrlListEnter()$/;"	f
ViSameDir	vfunc.vim	/^function! ViSameDir()$/;"	f
VimAmp	vafnc.vim	/^function! VimAmp()$/;"	f
VimAmp	vafnc.vim	/^let g:VimAmp = 0$/;"	v
VimAmp	vbfnc.vim	/^	let g:VimAmp = 0$/;"	v
VimAmpHiSyntax	vafnc.vim	/^function! VimAmpHiSyntax()$/;"	f
VimAmpLeave	ampleave.vim	/^function! VimAmpLeave()$/;"	f
VimAmpMap	vafnc.vim	/^function! VimAmpMap()$/;"	f
VimAmpStart	vafnc.vim	/^function! VimAmpStart()$/;"	f
VimAmpView	vafnc.vim	/^function! VimAmpView()$/;"	f
VimEnter	vfunc.vim	/^function! VimEnter()$/;"	f
VimGrep	vfunc.vim	/^function! VimGrep(expr)$/;"	f
VimLeave	vimrc.vim	/^function! VimLeave()$/;"	f
VirtualMove	vimrc.vim	/^function! VirtualMove()$/;"	f
WarnEdit	vfunc.vim	/^function! WarnEdit(name, flag)$/;"	f
WgetRead	vfunc.vim	/^function! WgetRead()$/;"	f
WindowMap	vmaps.vim	/^function! WindowMap()$/;"	f
WindowMapToggle	vfunc.vim	/^function! WindowMapToggle()$/;"	f
WindowUnMap	vmaps.vim	/^function! WindowUnMap()$/;"	f
WinsizeFile	vfunc.vim	/^function! WinsizeFile()$/;"	f
WordPronounce	vfunc.vim	/^function! WordPronounce()$/;"	f
X_mail_client	vfunc.vim	/^let X_mail_client = "xterm -e ". g:mail_client$/;"	v
X_www_client	vfunc.vim	/^let X_www_client = "xterm -e ".g:www_client$/;"	v
act_clr	vafnc.vim	/^let g:act_clr   = 6$/;"	v
act_copy	vafnc.vim	/^let g:act_copy  = 3$/;"	v
act_cut	vafnc.vim	/^let g:act_cut	= 2$/;"	v
act_del	vafnc.vim	/^let g:act_del   = 5$/;"	v
act_paste	vafnc.vim	/^let g:act_paste = 4$/;"	v
act_play	vafnc.vim	/^let g:act_play  = 1$/;"	v
add_browse_dir	vafnc.vim	/^let g:add_browse_dir = ''$/;"	v
blockstart	php-indent.vim	/^let s:blockstart = '\\(\\(\\(}\\s*\\)\\=else\\)\\=if\\>\\|while\\>\\|for\\(each\\)\\=\\>\\|declare\\|||\\|&&\\>\\)'$/;"	v
browse_start_dir	vbfnc.vim	/^let g:browse_start_dir = ''$/;"	v
browser_file	vbfnc.vim	/^let g:browser_file = '~\/.etc\/.tmp\/Browser.'$/;"	v
browser_func	vbfnc.vim	/^let g:browser_func = ''$/;"	v
browser_help_on	vbfnc.vim	/^let g:browser_help_on = 0$/;"	v
c_minlines	chtml.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
c_minlines	chtml.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
c_minlines	chtml.vim	/^  let b:c_minlines = c_minlines$/;"	v
cfilename	vfunc.vim	/^let g:cfilename = ''$/;"	v
closetag_html_style	closetag.vim	/^let b:closetag_html_style = 1$/;"	v
complType	SuperTab.vim	/^  let complType="\\<C-p>"$/;"	v
cpo	multi-value.vim	/^let &cpo = s:save_cpo$/;"	v
current_song	vafnc.vim	/^let g:current_song = ''$/;"	v
current_syntax	chtml.vim	/^let b:current_syntax = "c"$/;"	v
current_syntax	old.chtml.vim	/^let b:current_syntax = "chtml"$/;"	v
current_syntax	syntax/CVSAnnotate.vim	/^let b:current_syntax="CVSAnnotate"$/;"	v
did_c_syn_inits	chtml.vim	/^    let did_c_syn_inits = 1$/;"	v
did_chtml_syn_inits	old.chtml.vim	/^    let did_chtml_syn_inits = 1$/;"	v
did_cvsannotate_syntax_inits	syntax/CVSAnnotate.vim	/^let did_cvsannotate_syntax_inits = 1$/;"	v
did_indent	php-indent.vim	/^let b:did_indent = 1$/;"	v
dirPattern	info.vim	/^let s:dirPattern = '^\\* [^:]*: \\(([^)]*)\\)'$/;"	v
dull	vafnc.vim	/^let g:dull = 'Dark'$/;"	v
dull	vimrc.vim	/^let g:dull = 1$/;"	v
edit_browse_dir	vafnc.vim	/^let g:edit_browse_dir = '.'$/;"	v
edit_file	vafnc.vim	/^let g:edit_file = ''$/;"	v
endline	php-indent.vim	/^let s:endline= '\\s*\\(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
equal_status	vafnc.vim	/^let g:equal_status = 0$/;"	v
error_song_changed	vafnc.vim	/^let g:error_song_changed = 0$/;"	v
exa	vmmap.vim	/^let g:exa=1$/;"	v
file_123equ	vafnc.vim	/^let g:file_123equ = '~\/.etc\/VimAmp\/mpg.equ'$/;"	v
file_equal	vafnc.vim	/^let g:file_equal = g:sourcedir. '\/vimamp\/Equalizer.'$/;"	v
file_lyrics	vafnc.vim	/^let g:file_lyrics = '~\/.etc\/.tmp\/lyric.txt'$/;"	v
file_main	vafnc.vim	/^let g:file_main = g:sourcedir. '\/vimamp\/VimAmp'$/;"	v
file_out	vafnc.vim	/^let g:file_out = '~\/.etc\/VimAmp\/.mpgout'$/;"	v
file_plist	vafnc.vim	/^let g:file_plist = '~\/.etc\/VimAmp\/Playlist.'$/;"	v
g_cygwin	ide.vim	/^	let g:g_cygwin = 0$/;"	v
g_php_help	vfunc.vim	/^let g:g_php_help = 0$/;"	v
gdb_attach	vfunc.vim	/^let g:gdb_attach = 0$/;"	v
gdb_busy_sign	ide.vim	/^	let g:gdb_busy_sign = 'Busy:'$/;"	v
gdb_busy_sign	vimrc.vim	/^let g:gdb_busy_sign = 'Busy:'$/;"	v
gdb_cmd	ide.vim	/^	let g:gdb_cmd = ''$/;"	v
gdb_cwindow	ide.vim	/^	let g:gdb_cwindow = 1$/;"	v
gdb_cwindow	vimrc.vim	/^let g:gdb_cwindow = 0$/;"	v
gdb_disass	ide.vim	/^	let g:gdb_disass = 0$/;"	v
gdb_do_tfs	vfunc.vim	/^let g:gdb_do_tfs = 0$/;"	v
gdb_file	ide.vim	/^	let g:gdb_file = ''$/;"	v
gdb_pending	ide.vim	/^	let g:gdb_pending = ''$/;"	v
gdb_pid	ide.vim	/^	let g:gdb_pid = 0$/;"	v
gdb_running	ide.vim	/^	let g:gdb_running = 0$/;"	v
gdb_statusline	ide.vim	/^	let g:gdb_statusline = 1$/;"	v
gdb_sync	ide.vim	/^	let g:gdb_sync = 0$/;"	v
gdb_vimserver	ide.vim	/^	let g:gdb_vimserver = 0$/;"	v
gdb_working	ide.vim	/^	let g:gdb_working = 0$/;"	v
hostname	vimrc.vim	/^	 let g:hostname = substitute(g:hostname, '\\(\\w*\\).*', '\\1', '')$/;"	v
hostname	vimrc.vim	/^	let g:hostname = substitute(g:hostname, '\\..*', '', ''). ':'$/;"	v
hostname	vimrc.vim	/^	let g:hostname = system('hostname')$/;"	v
hostname	vimrc.vim	/^let g:hostname = ''$/;"	v
in_edit_window	vafnc.vim	/^let g:in_edit_window = 0$/;"	v
indentbeforelast	php-indent.vim	/^let s:indentbeforelast = 0$/;"	v
indentinghuge	php-indent.vim	/^let s:indentinghuge = 0$/;"	v
indexPattern	info.vim	/^let s:indexPattern = '^\\* [^:]*:\\s*\\([^.]*\\)\\.$'$/;"	v
indexPatternHL	info.vim	/^let s:indexPatternHL = '^\\* [^:]*:\\s\\+[^(]'$/;"	v
infoBufferName	info.vim	/^    let s:infoBufferName = '-Info- '$/;"	v
infoBufferName	info.vim	/^    let s:infoBufferName = 'Info: '$/;"	v
infoCmd	info.vim	/^let s:infoCmd = 'info --output=-'$/;"	v
iswitchb_prev_stl	vswitchb.vim	/^let g:iswitchb_prev_stl = ''$/;"	v
iswitchb_prev_var	vswitchb.vim	/^let g:iswitchb_prev_var = ''$/;"	v
iswitchb_var	vswitchb.vim	/^let g:iswitchb_var = ''$/;"	v
lastindented	php-indent.vim	/^let s:lastindented = 0$/;"	v
left_window_title	vafnc.vim	/^let g:left_window_title = 'Lyrics'$/;"	v
list	vimrc.vim	/^let g:list="\/bin\/ls -AF"$/;"	v
list	vimrc.vim	/^let g:list="\/bin\/ls -AFd [^\\\\\\(audio\\\\\\)]*[^\\\\\\(.o\\\\\\)]"$/;"	v
loaded_closetag	closetag.vim	/^let loaded_closetag=1$/;"	v
loaded_cvscommand	cvscommand.vim	/^let loaded_cvscommand = 1$/;"	v
loaded_cvscommand	cvscommand.vim	/^let loaded_cvscommand=2$/;"	v
loaded_drawit	DrawIt.vim	/^ let s:loaded_drawit= 1$/;"	v
loaded_multvals	multi-value.vim	/^let loaded_multvals = 310$/;"	v
loaded_taglist	taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_taglist	taglist.vim	/^let loaded_taglist='yes'$/;"	v
lost_update	vafnc.vim	/^let g:lost_update = 0$/;"	v
mail_client	vfunc.vim	/^let mail_client = "mutt"$/;"	v
mail_regexp	vfunc.vim	/^let mail_regexp='\\v[A-Za-z0-9\\-\\.]+\\@(\\a[A-Za-z0-9\\-]*\\.)+\\a\\w+'$/;"	v
main	cskeleton.cc	/^int main(int argc, char **argv)$/;"	f
main_syntax	old.chtml.vim	/^  let main_syntax = 'chtml'$/;"	v
menuPattern	info.vim	/^let s:menuPattern = '^\\* \\([^:]*\\)::'$/;"	v
myScriptId	multi-value.vim	/^let s:myScriptId = s:MyScriptId()$/;"	v
next_song	vafnc.vim	/^let g:next_song = 64003$/;"	v
notePattern	info.vim	/^let s:notePattern = '\\*[Nn]ote\\%(\\s\\|$\\)'$/;"	v
old_cwd	vbfnc.vim	/^let g:old_cwd =  ''$/;"	v
paus_song	vafnc.vim	/^let g:paus_song = 64001$/;"	v
php_main	php.php	/^function php_main()$/;"	f
plist_position	vafnc.vim	/^let g:plist_position = 0$/;"	v
plist_total	vafnc.vim	/^let g:plist_total = 0$/;"	v
prev_song	vafnc.vim	/^let g:prev_song = 63999$/;"	v
prev_song_changed_time	vafnc.vim	/^let g:prev_song_changed_time = 0$/;"	v
qpr_read	vfunc.vim	/^let g:qpr_read = 0$/;"	v
same_song	vafnc.vim	/^let g:same_song = 64000$/;"	v
save_cpo	multi-value.vim	/^let s:save_cpo = &cpo$/;"	v
selection	multi-value.vim	/^let s:selection = -1$/;"	v
sfilename	vfunc.vim	/^let g:sfilename = ''$/;"	v
song_changed	vafnc.vim	/^let g:song_changed = 0$/;"	v
song_vol	vafnc.vim	/^let g:song_vol = 0$/;"	v
sourcedir	vafnc.vim	/^let g:sourcedir =  expand('<sfile>:p:h:h:h')$/;"	v
spell_cword	vfunc.vim	/^let g:spell_cword = ''$/;"	v
spell_option	vhtml.vim	/^let g:spell_option = ''$/;"	v
spell_option	vimrc.vim	/^let g:spell_option = ''$/;"	v
spell_single	vfunc.vim	/^let g:spell_single = 1$/;"	v
spell_wlist	vfunc.vim	/^let g:spell_wlist = ''$/;"	v
stop_song	vafnc.vim	/^let g:stop_song = 64002$/;"	v
third_window_flag	vafnc.vim	/^let g:third_window_flag = 0$/;"	v
title_set	vimrc.vim	/^let g:title_set = 0$/;"	v
tlist_app_name	taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
tlist_brief_help	taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
tlist_cur_file_idx	taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
tlist_def_asm_settings	taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
tlist_def_aspperl_settings	taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
tlist_def_aspvbs_settings	taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
tlist_def_awk_settings	taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
tlist_def_beta_settings	taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
tlist_def_c_settings	taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
tlist_def_cobol_settings	taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
tlist_def_cpp_settings	taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;v:variable;d:macro;t:typedef;c:class;' .$/;"	v
tlist_def_cs_settings	taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
tlist_def_csh_settings	taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
tlist_def_eiffel_settings	taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
tlist_def_erlang_settings	taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
tlist_def_expect_settings	taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
tlist_def_fortran_settings	taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
tlist_def_html_settings	taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
tlist_def_java_settings	taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
tlist_def_javascript_settings	taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
tlist_def_lisp_settings	taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
tlist_def_lua_settings	taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
tlist_def_make_settings	taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
tlist_def_pascal_settings	taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
tlist_def_perl_settings	taglist.vim	/^let s:tlist_def_perl_settings = 'perl;p:package;s:subroutine'$/;"	v
tlist_def_php_settings	taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;f:function'$/;"	v
tlist_def_python_settings	taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
tlist_def_rexx_settings	taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
tlist_def_ruby_settings	taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
tlist_def_scheme_settings	taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
tlist_def_sh_settings	taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
tlist_def_slang_settings	taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
tlist_def_sml_settings	taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
tlist_def_sql_settings	taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
tlist_def_tcl_settings	taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
tlist_def_vera_settings	taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
tlist_def_verilog_settings	taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;P:parameter;r:register;' .$/;"	v
tlist_def_vim_settings	taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
tlist_def_yacc_settings	taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
tlist_def_zsh_settings	taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
tlist_deleted_flist	taglist.vim	/^let s:tlist_deleted_flist = ""$/;"	v
tlist_file_count	taglist.vim	/^let s:tlist_file_count = 0$/;"	v
tlist_ftype_count	taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
tlist_win_maximized	taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
tlist_winsize_chgd	taglist.vim	/^let s:tlist_winsize_chgd = 0$/;"	v
unaryTagsStack	closetag.vim	/^	let b:unaryTagsStack=""$/;"	v
unaryTagsStack	closetag.vim	/^	let b:unaryTagsStack="area base br dd dt hr img input li link meta p param"$/;"	v
update_prog	vafnc.vim	/^let g:update_prog = 0$/;"	v
update_prog	vbfnc.vim	/^let g:update_prog = 0$/;"	v
url_regexp	vfunc.vim	/^let url_regexp='\\v((http|ftp):\\\/\\\/)?(\\a[A-Za-z0-9\\-]*\\.)+\\a\\w+(\\\/[A-Za-z0-9\\-~\\.]+)*\\\/?'$/;"	v
var	ide.vim	/^let g:var = ""$/;"	v
win_equal	vafnc.vim	/^let g:win_equal = 6$/;"	v
win_main	vafnc.vim	/^let g:win_main = 2$/;"	v
win_misc	vafnc.vim	/^let g:win_misc = 3$/;"	v
win_plist	vafnc.vim	/^let g:win_plist = 5$/;"	v
winhelpfile	vwin.vim	/^let winhelpfile='windows.hlp'$/;"	v
www_client	vfunc.vim	/^let www_client = "lynx"$/;"	v
